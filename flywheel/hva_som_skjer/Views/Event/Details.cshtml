@model hva_som_skjer.Models.EventViewModel
@inject UserManager<ApplicationUser> userManager
@inject SignInManager<ApplicationUser> signInManager

@{
    ViewData["Title"] = @Html.DisplayFor(model => model.Event.Title);
}

@{
    ApplicationUser currentUser = null;

    if (signInManager.IsSignedIn(User))
    {
        currentUser = await userManager.GetUserAsync(User);
    }
        
}

<hr />

<div class="row">
    <div class="col-md-3">
        <div class="card" style="width: 18rem;">
            <div class="card-header">
                <i class="fa fa-calendar" aria-hidden="true"> </i> Arrangement
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item"><a asp-action="Index">Tilbake til Arrangementer</a></li>
                <li class="list-group-item"><a asp-action="Index" asp-route-key="@Model.Club.Id">Se flere arrangementer fra denne arrangøren</a></li>
                <li class="list-group-item"><a asp-controller="Club" asp-action="Club" asp-route-id="@Model.Club.Id">Gå til Klubben</a></li>
            </ul>
        </div>

        <br>

        @if (@Model.Admins.Any(a => a.User == @currentUser))
        {
            <div class="card" style="width: 18rem;">
                <div class="card-header">
                    <i class="fa fa-wrench" aria-hidden="true"></i> Administrer
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item"><a asp-action="Edit" asp-route-id="@Model.Event.Id">Rediger</a></li>
                    <li class="list-group-item"><a asp-action="Delete" asp-route-id="@Model.Event.Id">Slett </a></li>
                </ul>
            </div>
        }

    </div>

    <div class="col-md-6">
        <div class="card event-card">
            <img class="card-img-top" src="@Model.Event.ImagePath" alt="Card image cap">
            <div class="card-body">
                <div class="pull-right">
                        @if(User.Identity.IsAuthenticated)
                        {
                            @if (Model.Attending)
                            {
                                <form class="form-horizontal" method="post" asp-controller="Event" asp-action="NotGoing">
                                    <input type="hidden" name="eventId" value="@Model.Event.Id">
                                    <button id="singlebutton" name="singlebutton" class="btn btn-primary" style="float: right;"><i class="fa fa-check" aria-hidden="true"></i> Skal</button>
                                </form>                            
                            }else{
                                <form class="form-horizontal" method="post" asp-controller="Event" asp-action="Going">
                                    <input type="hidden" name="eventId" value="@Model.Event.Id">
                                    <button id="singlebutton" name="singlebutton" class="btn" style="float: right;"><i class="fa fa-check" aria-hidden="true"></i> Delta</button>
                                </form>                            
                            }
                        }
                </div>
                <h5 class="card-title">@Html.DisplayFor(model => model.Event.Title)</h5>
                <h6 class="card-subtitle mb-2 text-muted">Arrangør: @Model.Club.Name</h6>
                <hr />
                @if (Model.numAttendees > 0)
                {
                    <p class="card-text"><i class="fa fa-users" aria-hidden="true"></i> @Model.numAttendees skal dit</p>
                }
                <p class="card-text"><i class="fa fa-clock-o" aria-hidden="true"></i> </i> @Model.Event.StartDate.ToLongDateString(), kl.  @Html.DisplayFor(model => model.Event.StartTime) til @Html.DisplayFor(model => model.Event.EndTime)</p>
                <p class="card-text"><i class="fa fa-map-marker" aria-hidden="true"></i> @Html.DisplayFor(model => model.Event.Location)</a>
                <hr />
                <p class="card-text"><small class="text-muted">Opprettet @Html.DisplayFor(model => model.Event.Created)</small></p>
            </div>
        </div>

        <br>

        <div class="card event-card">
            <div class="card-header">
                Detaljer
            </div>
            <div class="card-body">
                <p class="card-text">@Html.DisplayFor(model => model.Event.Content)</p>
            </div>
        </div>
    </div>   
    <div class="col-md-3"></div> 
 </div>

